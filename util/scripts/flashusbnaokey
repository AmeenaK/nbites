#!/bin/sh
##
## flashusbnaokey
## Login : <ctaf@localhost.localdomain>
## Started on  Thu May 29 12:08:34 2008 Cedric GESTES
## $Id$
##
## Author(s):
##  - Cedric GESTES <gestes@aldebaran-robotics.com>
##
## Copyright (C) 2008 Aldebaran Robotics
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the Free Software
## Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
##


## Modified by Northern Bites of Bowdoin College, Brunswick, ME USA
## All terms of the licence remain the same.

check_app()
{
  local app="$1"
  local comment="$2"
  if ! which $app 2>/dev/null >/dev/null ; then
    msg="flashusbnaokey: Can't find the command '$app' on your system !!!!
$comment"
    echo "WARNING" "$msg"
    return 1
  fi
  return 0
}




##MAIN
if ! [ $# -eq 1 ] ; then
  echo "bad number of argument"
  echo "usage: flashusbnaokey image-usb-opennao.ext3"
  exit 1
fi
arg=$1


check_app "dd" "tools to do binary copy"
check_app "bzip2" "decompress the disk image"
check_app "sfdisk" "reload the partition table"

SCSI_ID=$(dmesg |grep -e Kingmax |sed 's/^.*scsi \([0-9]*:[0-9]*:[0-9]*:[0-9]*:\).*$/\1/' | tail -1)

if [ x$SCSI_ID = x ] ; then
  echo "Error: no kingmax flashdrive found"
  exit 42
fi

DEV=$(dmesg |grep $SCSI_ID| grep "removable disk"| sed 's/.*\[\([a-z]*\)\].*$/\1/' | tail -1)

if [ x$DEV = x ] ; then
  echo "Error: no kingmax flashdrive found"
  exit 41
fi

DEVSIZE=$(grep -e "${DEV}$" /proc/partitions |sed 's/[ ]\+/ /g' |cut -f 4 -d ' ')

DEVLIST=$(grep -e "${DEV}" /proc/partitions |sed 's/[ ]\+/ /g' |cut -f 5 -d ' ' | grep '[0-9]')


echo "Detected device: $DEV, size: $DEVSIZE octects"

if [ "x${DEV}" = x ] || [ "x${DEVSIZE}" = x ] ; then
  echo "Error: no kingmax flashdrive found"
  exit 1
fi

if ! [ "${DEVSIZE}" -le 2000000 ] ; then
  echo "Error: size too big for the flashdrive detected"
  exit 1
fi

for i in ${DEVLIST} ; do
  if mount | grep $i >/dev/null 2>/dev/null; then
    echo "Error: Please umount: $i"
    exit 3
  fi
done;

echo "writing to the flashdrive, this may take some time..."

bzip2 -cdk "${arg}" | dd of="/dev/${DEV}1"

echo "writing completed"
echo ""


sfdisk -R "/dev/${DEV}" 2>/dev/null


echo "operation completed, you can remove your key"
exit 0

