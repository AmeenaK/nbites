#!/bin/bash


# Notes: This file currently works only for linux. By uncommenting 
# the FOR MAC lines, and commenting the FOR LINUX, you can change this
# The main difference being that linux g++ can compile directly to a shared
# library, and on a mac you need to use libtool first to accomplish this
#
# If this doesnt work, make sure the inlcude paths (-I) are set correctly for
# your version of the JVM, otherwise TOOLVisionLink.cpp can't find jni.h, etc

MAN_HOME="../../../man"

LIBVISION="$MAN_HOME/build/cmake.vision/libvision.a"
LIBSENSORS="$MAN_HOME/build/cmake.man.corpus/lib_sensors.a"

if [ ! -e $LIBVISION ]; then
echo "libvision.a not found, exiting"
exit -1
fi

if [ ! -e $LIBSENSORS ]; then
echo "lib_sensors.a not found, exiting"
exit -1
fi

OS=$(uname)

javac TOOLVisionLink.java

javah -jni TOOLVisionLink

if [ "$OS" = "Darwin" ]; then
echo "Compiling for Mac"
g++ -dynamiclib  -I/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Headers -I/sw/include -I$MAN_HOME/vision/ -I$MAN_HOME/include -I$MAN_HOME/corpus/ -I/usr/include/python2.5/ -DNO_ZLIB -DROBOT_TYPE=NAO_RL TOOLVisionLink.cpp  -lpython $LIBVISION $LIBSENSORS -o libTOOLVisionLink.jnilib
 
elif [ "$OS" = "Linux" ]; then
echo "Compiling for Linux"
g++ -o libTOOLVisionLink.so TOOLVisionLink.cpp $LIBVISION $LIBSENSORS -shared -fpic -lpython2.5 -I/usr/lib/jvm/java-6-sun-1.6.0.07/include/ -I/usr/lib/jvm/java-6-sun-1.6.0.07/include/linux/ -I$MAN_HOME/vision/ -I$MAN_HOME/include -I$MAN_HOME/corpus/ -I/usr/include/python2.5/ -DNO_ZLIB -DROBOT_TYPE=NAO_RL
echo g++ -o libTOOLVisionLink.so TOOLVisionLink.cpp $LIBVISION $LIBSENSORS -shared -fpic -lpython2.5 -I/usr/lib/jvm/java-6-sun-1.6.0.07/include/ -I/usr/lib/jvm/java-6-sun-1.6.0.07/include/linux/ -I$MAN_HOME/vision/ -I$MAN_HOME/include -I$MAN_HOME/corpus/ -I/usr/include/python2.5/ -DNO_ZLIB -DROBOT_TYPE=NAO_RL

else
echo "Unkown OS"
exit -1
fi


## FOR LINUX (ubuntu 8.04) ##
#

## FOR MAC: ##


#libtool -dynamic -flat_namespace -undefined suppress -lpython2.5 -o libvision.a lib_sensors.a libTOOLVisionLink.jnilib TOOLVisionLink.o


## FOR MAC -- untested, since we can't generate the .dylib libs yet##
#g++ -dynamic -c -o TOOLVisionLink.o TOOLVisionLink.cpp libvision.a lib_sensors.a -lpython2.5 -I/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Headers -I/sw/include -I$MAN_HOME/vision/ -I$MAN_HOME/include -I$MAN_HOME/corpus/ -I/usr/include/python2.5/ -DNO_ZLIB -DROBOT_TYPE=NAO_RL

#libtool -dynamic -flat_namespace -undefined suppress -o libTOOLVisionLink.jnilib TOOLVisionLink.o


java  -Djava.library.path=./ TOOLVisionLink