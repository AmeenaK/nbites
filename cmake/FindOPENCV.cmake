SET( OPENCV_DEFINITIONS "" )


##
# Includes
##

INCLUDE( "${CMAKE_MODULE_PATH}/base_definitions.cmake" )

SET(OPENCV_INCLUDE_DIR "OPENCV_INCLUDE_DIR-NOTFOUND" CACHE FILEPATH "Cleared." FORCE)
FIND_PATH( OPENCV_INCLUDE_DIR
	cv.h
PATHS
	${INCLUDE_PREFIX}/opencv/
	NO_DEFAULT_PATH
	)

SET(CV_LIB "CV_LIB-NOTFOUND" CACHE FILEPATH "Cleared." FORCE)
FIND_LIBRARY( CV_LIB
  cv
PATHS
  ${LIB_PREFIX}/
  NO_DEFAULT_PATH
)

SET(CVAUX_LIB "CVAUX_LIB-NOTFOUND" CACHE FILEPATH "Cleared." FORCE)
FIND_LIBRARY( CVAUX_LIB
  cvaux
PATHS
  ${LIB_PREFIX}/
  NO_DEFAULT_PATH
)

SET(CXCORE_LIB "CXCORE_LIB-NOTFOUND" CACHE FILEPATH "Cleared." FORCE)
FIND_LIBRARY( CXCORE_LIB
  cxcore
PATHS
  ${LIB_PREFIX}/
  NO_DEFAULT_PATH
)

SET(HIGHGUI_LIB "HIGHGUI_LIB-NOTFOUND" CACHE FILEPATH "Cleared." FORCE)
FIND_LIBRARY( HIGHGUI_LIB
  highgui
PATHS
  ${LIB_PREFIX}/
  NO_DEFAULT_PATH
)

SET(OPENCV_LIBRARIES "OPENCV_LIBRARIES-NOTFOUND" CACHE FILEPATH "Cleared." FORCE)
SET( OPENCV_LIBRARIES 
	${CV_LIB} 
	${CVAUX_LIB} 
	${CXCORE_LIB} 
	${HIGHGUI_LIB} 
	)

IF( OPENCV_INCLUDE_DIR AND OPENCV_LIBRARIES )
  SET( OPENCV_FOUND TRUE )
ENDIF( OPENCV_INCLUDE_DIR AND OPENCV_LIBRARIES )

IF( NOT OPENCV_FOUND AND OPENCV_FIND_REQUIRED )
  IF( NOT OPENCV_INCLUDE_DIR )
		MESSAGE( STATUS "Required include not found" )
    MESSAGE( FATAL_ERROR "Could not find OPENCV include!" )
  ENDIF( NOT OPENCV_INCLUDE_DIR )
  IF( NOT OPENCV_LIBRARIES )
  	MESSAGE( STATUS "Required libraries not found" )
    MESSAGE( FATAL_ERROR "Could not find OPENCV libraries!" )
  ENDIF( NOT OPENCV_LIBRARIES )
ENDIF( NOT OPENCV_FOUND AND OPENCV_FIND_REQUIRED )

# Finally, display informations if not in quiet mode
IF( NOT OPENCV_FIND_QUIETLY )
  MESSAGE( STATUS "OPENCV found " )
  MESSAGE( STATUS "  includes   : ${OPENCV_INCLUDE_DIR}" )
  MESSAGE( STATUS "  libraries  : ${OPENCV_LIBRARIES}" )
  MESSAGE( STATUS "  definitions: ${OPENCV_DEFINITIONS}" )
ENDIF( NOT OPENCV_FIND_QUIETLY )



MARK_AS_ADVANCED(
  OPENCV_DEFINITIONS
  OPENCV_INCLUDE_DIR
  OPENCV_LIBRARIES
)
