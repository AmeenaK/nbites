#!/bin/sh
echo "Configuring and compiling the cross-compiler for the nao. Please enter your user name and password when promted, and be ready for a long wait"

TMP_DIR=/tmp/nao-cross-build
AL_DIR=/usr/local/nao
CROSS_BASE=$AL_DIR/crosstoolchain

echo "Please enter your ldap username:"
read USER

echo "Please enter your ldap password"
read -s PASSWORD

TARGET=i486-linux
PREFIX=$CROSS_BASE/cross
SYSROOT=$CROSS_BASE/staging/$TARGET

MAKE_OPTIONS=-j4


echo Using USER=$USER.

echo "Making temp directory at $TMP_DIR"
mkdir $TMP_DIR
cd $TMP_DIR


echo Downloading Nao SDK
test -e NaoQi-0.1.16-Linux.tar.gz || curl -Oku $USER:$PASSWORD https://robocup.bowdoin.edu/files/software/nao/NaoQi-0.1.16-Linux.tar.gz
echo Downloading Nao Cross-Compilation package
test -e nao-cross-base.tar.gz || curl -Oku $USER:$PASSWORD https://robocup.bowdoin.edu/files/software/nao/nao-cross-base.tar.bz2
echo Downloading binutils source
test -e binutils-2.18.tar.bz2 || curl -Oku $USER:$PASSWORD https://robocup.bowdoin.edu/files/software/nao/binutils-2.18.tar.bz2
echo Downloading gcc source
test -e gcc-4.2.3.tar.bz2 || curl -Oku $USER:$PASSWORD https://robocup.bowdoin.edu/files/software/nao/gcc-4.2.3.tar.bz2

echo Unpacking SDK
if [ ! -e $AL_DIR ]; then
  mkdir -p $AL_DIR && \
    tar --strip 1 -C $AL_DIR -xzf NaoQi-0.1.16-Linux.tar.gz \
    || exit 1

fi
echo Unpacking Cross Compiler base
if [ ! -e $CROSS_BASE ]; then
  mkdir -p $CROSS_BASE && \
    tar -C $CROSS_BASE -xjf nao-cross-base.tar.bz2 \
    || exit 1
fi
echo Unpacking binutils
rm -rf binutils-2.18 && tar -xjf binutils-2.18.tar.bz2 || exit 1
echo Unpacking gcc
rm -rf gcc-4.2.3 && tar -xjf gcc-4.2.3.tar.bz2 || exit 1

echo Building binutils
pushd binutils-2.18 && ./configure --prefix=$PREFIX \
                                   --target=$TARGET \
                                   --with-sysroot=$SYSROOT &&
                       make $MAKE_OPTIONS && \
                       make install && \
                       popd || exit 1

echo Building gcc
pushd gcc-4.2.3 && ./configure --prefix=$PREFIX \
                               --target=$TARGET \
                               --with-gnu-as \
                               --with-gnu-ld \
                               --with-as=$PREFIX/bin/$TARGET-as \
                               --with-ld=$PREFIX/bin/$TARGET-ld \
                               --with-sysroot=$SYSROOT \
                               --enable-threads=posix \
                               --enable-languages=c,c++ && \
                   make $MAKE_OPTIONS && \
                   make install && \
                   popd || exit 1

echo Done!
