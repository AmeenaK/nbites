<!-- ant build file for the Northern-Bites tool -->
<!-- @author Octavian Neamtu -->
<project name="man.vision" default="visionlink" basedir="..">


  <property name="visionlink.file" location="${tool.src.dir}/TOOL/Vision/TOOLVisionLink.cpp"/>
  <property name="visionlink.header.dir" location="${build.dir}"/>
  <property name="visionlink.build.dir" location="${build.dir}/visionlink"/>
  <property name="visionlink.target" value="TOOLVisionLink"/>
  <property name="visionlink.target.dir" value="${visionlink.build.dir}/cmake.vision"/>
  <property name="man.cmake.dir" value="${man.dir}/cmake.man"/>
  <!-- cmake definitions -->
  <property name="crossoff.def" value="-DOE_CROSS_BUILD:BOOL=OFF"/>
  <property name="straight.def" value="-DSTRAIGHT:BOOL=ON"/>
  <property name="nozlib.def" value="-DNO_ZLIB:BOOL=ON"/>
  <property name="offline.def" value="-DOFFLINE:BOOL=ON"/>
  <property name="visionlink.def" value="-DVISIONLINK:BOOL=ON" />
  <property name="visionlink.header.def" value="-DVISIONLINK_HEADER_DIR:PATH=${visionlink.header.dir}"/>
  <property name="visionlink.file.def" value="-DVISIONLINK_FILE:FILEPATH=${visionlink.file}" />
  <!-- program definitions -->
  <property name="cmake" value="cmake"/>
  <property name="cache-editor" value="CMake-GUI"/>


  <property name="man.sensors.target" value="sensors"/>
  <property name="man.vision.target" value="vision"/>

  <target name="platform.check" depends="win.check,unix.check"/>

  <target name="win.check" if="isWin">
    <echo message="configuring vision for Windows"/>
    <property name="makefile.type" value="MinGW Makefiles"/>
    <property name="make" value="mingw32-make"/>
  </target>
  <!-- remember mac is still unix (albeit a bastard type) -->
  <target name="unix.check" if="isUnix">
    <echo message="configuring vision for Unix/Mac"/>
    <property name="makefile.type" value="Unix Makefiles"/>
    <property name="make" value="make"/>
  </target>

  <target name="cache.check">
    <available file="${visionlink.build.dir}/CMakeCache.txt" 
      property="cache.present"/>
  </target>

  <target name="cmake.generate" depends="cache.check" unless="cache.present">
    <mkdir dir="${visionlink.build.dir}"/>
    <exec executable="${cmake}"
      dir="${visionlink.build.dir}"
      failonerror="${true}">
      <arg value="${visionlink.file.def}"/>
      <arg value="${visionlink.header.def}"/>
      <arg value="${visionlink.def}"/>
      <arg value="${straight.def}"/>
      <arg value="${crossoff.def}"/>
      <arg value="${nozlib.def}"/>
      <arg value="${offline.def}"/>
      <arg value="${man.cmake.dir}" />
      <arg value="-G" />
      <arg value="${makefile.type}"/>
    </exec>
  </target>

  <target name="cache.edit" depends="cmake.generate" unless="${no.cache.edit}"
    description="edits the cmake cache for the visionlink man build">
    <!-- edit the cache -->
    <exec executable="${cache-editor}" 
      dir="${visionlink.build.dir}" 
      failonerror="True">
      <arg value="." />
    </exec>
  </target>

  <target name="build.libs.quick" if="${quick.build}" depends="cache.edit" 
    description="builds the libraries with some degree of parallelism">
    <!-- run make -->
    <exec executable="${make}" dir="${visionlink.build.dir}" failonerror="True">
      <arg value="${visionlink.target}" />
      <arg value="-j2" />
    </exec>
  </target>

  <target name="build.libs.regular" unless="${quick.build}" depends="cache.edit" description="builds the libraries in a regular fashion">
    <!-- run make -->
    <exec executable="${make}" dir="${visionlink.build.dir}" failonerror="True">
      <arg value="${visionlink.target}" />
    </exec>
  </target>

  <target name="visionlink" depends="platform.check,build.libs.quick,build.libs.regular" 
    description="build the man vision library">
    <copy todir="${build.dir}" verbose="True">
      <fileset dir="${visionlink.target.dir}">
        <include name="*${visionlink.target}.*" />
        <exclude name="*.a" />
      </fileset>
    </copy>
  </target>

</project>